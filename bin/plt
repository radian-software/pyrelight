#!/usr/bin/env bash

set -e
set -o pipefail
unset CDPATH

# https://stackoverflow.com/a/20053121/3538165
function quote() {
    sed -e "s/'/'\\\\''/g; 1s/^/'/; \$s/\$/'/"
}

function quote_args() {
    while (( $# > 0 )); do
        printf "%s" "$1" | quote
        if (( $# > 1 )); then
            echo -n " "
        fi
        shift
    done
    echo
}

# https://stackoverflow.com/a/33054561/3538165
# https://unix.stackexchange.com/a/176703/176805
function connect() {
    exit_code=
    while IFS= read -r line || ! nc_status="${line}"; do
        if [[ -z "${exit_code}" ]]; then
            case "${line}" in
                success) exit_code=0 ;;
                error  ) exit_code=1 ;;
                *      )
                    echo "plt: got unexpected response from server: ${line}" >&2
                    exit 1 ;;
            esac
        else
            printf "%s\n" "${line}" >&2
        fi
    done < <(set +e; nc -N -U server <<< "${msg}" 2>/dev/null; echo -n "$?")
    if (( "${nc_status}" != 0 )); then
        return 1
    elif [[ -z "${exit_code}" ]]; then
        echo "plt: didn't get any response from server" >&2
        exit 1
    fi
    exit "${exit_code}"
}

script_path="${BASH_SOURCE[0]}"
script_dir="$(dirname "${script_path}")"
src_dir="$(cd -P -- "${script_dir}/.." && pwd -P)"

msg="$(quote_args "$@")"

cd "${src_dir}"
if ! connect; then
    rm -f server
    python3 -u -m pyrelight &>server.log &
    for i in {1..50}; do
        if [[ -S server ]]; then
            connect
        elif ! kill -0 "$!" 2>/dev/null; then
            break
        fi
        sleep 0.01
    done
    if [[ -s server.log ]]; then
        echo "plt: failed to start server:" >&2
        sed 's/^/| /' server.log >&2
    else
        echo "plt: failed to start server, no diagnostic information available" >&2
    fi
    exit 1
fi
